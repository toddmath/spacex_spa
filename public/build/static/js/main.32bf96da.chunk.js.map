{"version":3,"sources":["logo.png","components/MissionKey.js","components/LaunchListItem.js","components/LaunchesList.js","components/Launches.js","components/DetailListItem.js","components/LaunchDetails.js","context/background.context.js","components/RocketDetails.js","components/LaunchVideo.js","components/Launch.js","components/LatestLaunch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MissionKey","className","LaunchListItem","memo","launch","flight_number","mission_name","launch_date_local","launch_success","style","Card","classNames","CardBody","Col","md","sm","CardTitle","tag","CardSubtitle","format","to","areEqual","LaunchesList","launches","width","useIsScrolling","itemCount","length","itemSize","height","Math","max","document","documentElement","clientHeight","window","innerHeight","index","LAUNCHES_QUERY","gql","Launches","useQuery","error","loading","data","refetch","console","log","message","overflowY","maxHeight","src","logo","alt","ButtonGroup","Button","color","outline","type","aria-label","onClick","success","title","children","ListGroupItem","launch_year","details","site_name","CardHeader","ListGroup","fromNow","BackgroundContext","createContext","useBackground","context","useContext","Error","BackgroundProvider","props","useState","background","setBackground","value","useMemo","Provider","pics","id","name","wikipedia","article","pressKit","flickr","bg","setBg","useEffect","body","backgroundSize","filter","p","i","map","link","key","CardFooter","CardLink","href","referrerPolicy","rel","target","size","video_link","Media","url","controls","config","youtube","preload","playerVars","showInfo","LAUNCH_QUERY","match","params","Number","variables","rocket","rocket_id","rocket_name","rocket_type","cost_per_launch","description","links","mission_patch_small","presskit","article_link","flickr_images","launch_site","site_name_long","site_id","Container","fluid","heading","right","object","LATEST_LAUNCH_QUERY","LatestLaunch","latestLaunch","client","ApolloClient","uri","App","exact","path","component","Launch","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32bf96da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ed334e51.png\";","import React from 'react'\n\nconst MissionKey = () => (\n  <div className='my-3 d-inline-block'>\n    <p>\n      <span className='px-3 mr-2 bg-success' /> = Success\n    </p>\n    <p>\n      <span className='px-3 mr-2 bg-danger' /> = Fail\n    </p>\n  </div>\n)\n\nexport default MissionKey\n","import React, { memo } from 'react'\nimport { areEqual } from 'react-window'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\nimport Moment from 'react-moment'\nimport { Card, CardBody, CardTitle, CardSubtitle, Col } from 'reactstrap'\n\nconst LaunchListItem = memo(\n  ({\n    launch: { flight_number, mission_name, launch_date_local, launch_success },\n    style,\n  }) => {\n    return (\n      <div style={style}>\n        <Card\n          className={classNames(\n            { 'border-success': launch_success, 'border-danger': !launch_success },\n            'mb-3',\n            'shadow'\n          )}\n        >\n          <CardBody className='row py-3 px-5'>\n            <Col md='8 pt-2 pb-0' sm='pt-0'>\n              <CardTitle tag='h5'>\n                Mission:{' '}\n                <span\n                  className={classNames({\n                    'text-success': launch_success,\n                    'text-danger': !launch_success,\n                  })}\n                >\n                  {mission_name}\n                </span>\n              </CardTitle>\n              <CardSubtitle className='pt-2'>\n                <Moment format='LLLL'>{launch_date_local}</Moment>\n              </CardSubtitle>\n            </Col>\n\n            <Col md='4' className='d-flex pt-2'>\n              <Link\n                to={`/launch/${flight_number}`}\n                className={classNames(\n                  {\n                    'btn-outline-success': launch_success,\n                    'btn-outline-danger': !launch_success,\n                  },\n                  'btn',\n                  'btn-block',\n                  'align-self-end',\n                  'justify-self-end'\n                )}\n              >\n                Launch Details\n              </Link>\n            </Col>\n          </CardBody>\n        </Card>\n      </div>\n    )\n  },\n  areEqual\n)\n\nexport default LaunchListItem\n","import React from 'react'\nimport { FixedSizeList as List } from 'react-window'\n\nimport LaunchListItem from './LaunchListItem'\n// import LaunchItem from './LaunchItem'\n\nconst LaunchesList = ({ launches, width }) => {\n  return (\n    <List\n      useIsScrolling\n      itemCount={launches.length}\n      itemSize={132}\n      height={Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      )}\n      width={width}\n    >\n      {({ index, style }) => (\n        <LaunchListItem launch={launches[index]} style={style} />\n      )}\n    </List>\n  )\n}\n\nexport default LaunchesList\n\n/*\n<List\n  useIsScrollling\n  itemData={launches}\n  itemCount={launches.length}\n  itemSize={200}\n  height={height || 1000}\n  width={width}\n>\n  {LaunchListItem}\n</List>\n*/\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { Link } from 'react-router-dom'\nimport { Button, ButtonGroup } from 'reactstrap'\n\nimport { FaRocket as RocketIcon, FaRedo as RefreshIcon } from 'react-icons/fa'\n// import LaunchItem from './LaunchItem'\nimport MissionKey from './MissionKey'\nimport LaunchesList from './LaunchesList'\nimport logo from '../logo.png'\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`\n\nconst Launches = () => {\n  const { error, loading, data, refetch } = useQuery(LAUNCHES_QUERY)\n\n  // const sanitize = str => String(str).replace(/(\\s+)?/g, '')\n\n  if (loading) return <h4>Loading...</h4>\n  if (error) return console.log(`Error: ${error.message}`)\n\n  return (\n    <div style={{ overflowY: 'hidden', height: '100vh', maxHeight: '100vh' }}>\n      <img\n        src={logo}\n        alt='SpaceX'\n        className='img-fluid w-50 w-sm-75 mx-auto d-block mb-3'\n      />\n      <h1 className='display-4 my-3'>Launches</h1>\n      <MissionKey />\n      <ButtonGroup className='float-right my-3'>\n        <Button\n          color='success'\n          outline\n          type='button'\n          aria-label='refetch launches'\n          onClick={() => refetch()}\n        >\n          Refetch Launches <RefreshIcon />\n        </Button>\n        <Link className='btn btn-outline-success' to='/launch/latest'>\n          Latest Launch <RocketIcon />\n        </Link>\n      </ButtonGroup>\n      <LaunchesList launches={data.launches} width='100%' />\n    </div>\n  )\n}\n\nexport default Launches\n\n/*\n<>\n  <img\n    src={logo}\n    alt='SpaceX'\n    className='img-fluid w-50 w-sm-75 mx-auto d-block mb-3'\n  />\n  <h1 className='display-4 my-3'>Launches</h1>\n  <MissionKey />\n  <ButtonGroup className='float-right my-3'>\n    <Button\n      color='success'\n      outline\n      type='button'\n      aria-label='refetch launches'\n      onClick={() => refetch()}\n    >\n      Refetch Launches <RefreshIcon />\n    </Button>\n    <Link className='btn btn-outline-success' to='/launch/latest'>\n      Latest Launch <RocketIcon />\n    </Link>\n  </ButtonGroup>\n  {data.launches.map(launch => (\n    <LaunchItem key={sanitize(launch.mission_name)} launch={launch} />\n  ))}\n</>\n\n\nimport React from \"react\"\nimport gql from \"graphql-tag\"\nimport { useQuery } from \"@apollo/react-hooks\"\n\nimport LaunchItem from \"./LaunchItem\"\nimport MissionKey from \"./MissionKey\"\n// import graphqlLogo from \"../GraphQL_Logo_opt.svg\"\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`\n\nconst Launches = () => {\n  const { error, loading, data, refetch } = useQuery(LAUNCHES_QUERY)\n\n  const sanitize = str => String(str).replace(/(\\s+)?/g, \"\")\n\n  if (loading) return <h4>Loading...</h4>\n  if (error) return console.log(`Error: ${error.message}`)\n\n  return (\n    <>\n      <h1 className='display-4 my-3'>Launches</h1>\n      <MissionKey />\n      <button\n        onClick={() => refetch()}\n        type='button'\n        className='btn btn-outline-success btn-md float-right my-3'\n      >\n        Refetch Launches\n      </button>\n      {data.launches.map(launch => (\n        <LaunchItem key={sanitize(launch.mission_name)} launch={launch} />\n      ))}\n    </>\n  )\n}\n\nexport default Launches\n*/\n","import React, { memo } from 'react'\nimport { ListGroupItem } from 'reactstrap'\nimport classNames from 'classnames'\n\nconst DetailListItem = ({ success, title, children }) => (\n  <ListGroupItem>\n    <span\n      className={classNames({ 'text-success': success, 'text-danger': !success })}\n    >\n      {title}\n      {': '}\n    </span>\n    {children}\n  </ListGroupItem>\n)\n\nexport default memo(DetailListItem)\n","import React, { memo } from 'react'\nimport classNames from 'classnames'\nimport { Card, CardHeader, ListGroup } from 'reactstrap'\nimport Moment from 'react-moment'\n\nimport DetailListItem from './DetailListItem'\n\nconst LaunchDetails = ({\n  success,\n  flight_number,\n  launch_year,\n  details,\n  site_name,\n  launch_date_local,\n}) => (\n  <Card\n    className={classNames(\n      { 'border-success': success, 'border-danger': !success },\n      'shadow',\n      'my-4'\n    )}\n  >\n    <CardHeader>\n      <h3 className='h4'>Launch Details</h3>\n    </CardHeader>\n\n    <ListGroup className='p-0 card-body'>\n      <DetailListItem success={success} title='Flight Number'>\n        {flight_number}\n      </DetailListItem>\n      <DetailListItem success={success} title='Year'>\n        {launch_year}\n      </DetailListItem>\n      <DetailListItem success={success} title='Launched'>\n        <Moment fromNow>{launch_date_local}</Moment>\n      </DetailListItem>\n      <DetailListItem success={success} title='Success'>\n        {success ? 'Yes' : 'No'}\n      </DetailListItem>\n      <DetailListItem success={success} title='Site'>\n        {site_name}\n      </DetailListItem>\n      {details && (\n        <DetailListItem success={success} title='Details'>\n          {details}\n        </DetailListItem>\n      )}\n    </ListGroup>\n  </Card>\n)\n\nexport default memo(LaunchDetails)\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { createContext, useState, useContext, useMemo } from 'react'\n\nexport const BackgroundContext = createContext(null)\n\nexport function useBackground() {\n  const context = useContext(BackgroundContext)\n\n  if (!context) {\n    throw new Error('Must be called within BackgroundContext Provider!')\n  }\n\n  return context\n}\n\nexport function BackgroundProvider(props) {\n  const [background, setBackground] = useState('')\n\n  const value = useMemo(() => [background, setBackground], [background])\n\n  return <BackgroundContext.Provider value={value} {...props} />\n}\n\nexport default { useBackground, BackgroundProvider }\n","/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, memo } from 'react'\nimport classNames from 'classnames'\nimport {\n  Card,\n  CardHeader,\n  CardLink,\n  CardFooter,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap'\n\nimport { FaWikipediaW as Wikipedia, FaFilePdf as PdfFileIcon } from 'react-icons/fa'\nimport DetailListItem from './DetailListItem'\nimport { useBackground } from '../context/background.context'\n\nconst showTwo = pics => pics.filter((p, i) => i >= 2 && i <= 3)\n\nconst RocketDetails = ({\n  success,\n  id,\n  name,\n  type,\n  wikipedia,\n  article,\n  pressKit,\n  flickr,\n}) => {\n  const [bg, setBg] = useBackground()\n\n  useEffect(() => {\n    setBg(flickr[0])\n  }, [setBg, flickr])\n\n  useEffect(() => {\n    document.body.style.background = bg ? `url(${bg})` : '#060606'\n    document.body.style.backgroundSize = 'cover'\n\n    return () => {\n      document.body.style.background = '#060606'\n    }\n  }, [bg])\n\n  return (\n    <Card\n      className={classNames(\n        { 'border-success': success, 'border-danger': !success },\n        'shadow',\n        'mb-4'\n      )}\n    >\n      <CardHeader>\n        <h3 className='h4'>Rocket Details</h3>\n      </CardHeader>\n\n      <ListGroup className='p-0 card-body'>\n        <DetailListItem success={success} title='ID'>\n          {id}\n        </DetailListItem>\n        <DetailListItem success={success} title='Name'>\n          {name}\n        </DetailListItem>\n        <DetailListItem success={success} title='Type'>\n          {type}\n        </DetailListItem>\n        {flickr.length > 0 && (\n          <ListGroupItem>\n            {flickr.length > 1 ? (\n              showTwo(flickr).map((link, i) => (\n                <img\n                  key={i}\n                  alt={`flickr img ${i + 1}`}\n                  src={link}\n                  className='img img-thumbnail w-50'\n                />\n              ))\n            ) : (\n              <img\n                src={flickr}\n                alt='flick img'\n                className='img img-thumbnaill w-auto'\n              />\n            )}\n          </ListGroupItem>\n        )}\n      </ListGroup>\n\n      <CardFooter className='d-flex flex-row justify-content-around align-items-center'>\n        <CardLink\n          href={wikipedia}\n          referrerPolicy='no-referrer'\n          rel='noreferrer noopener'\n          target='_blank'\n          className={classNames({\n            'text-success': success,\n            'text-danger': !success,\n          })}\n        >\n          <Wikipedia size='1.8em' />\n        </CardLink>\n        {pressKit && (\n          <CardLink\n            href={pressKit}\n            referrerPolicy='no-referrer'\n            rel='noreferrer noopener'\n            target='_blank'\n            className={classNames({\n              'text-success': success,\n              'text-danger': !success,\n            })}\n          >\n            Press-kit <PdfFileIcon size='1.8em' />\n          </CardLink>\n        )}\n        {wikipedia !== article && (\n          <CardLink\n            href={article}\n            referrerPolicy='no-referrer'\n            rel='noreferrer noopener'\n            target='_blank'\n            className={classNames({\n              'text-success': success,\n              'text-danger': !success,\n            })}\n          >\n            Article on {name}\n          </CardLink>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default memo(RocketDetails)\n","import React, { memo } from 'react'\nimport ReactPlayer from 'react-player'\nimport { Card, CardHeader, CardFooter, Media } from 'reactstrap'\nimport classNames from 'classnames'\n\nconst LaunchVideo = ({ success, video_link }) => (\n  <Card\n    className={classNames(\n      { 'border-success': success, 'border-danger': !success },\n      'shadow',\n      'mb-4'\n    )}\n  >\n    <CardHeader>\n      <h3 className='h4'>Launch Video</h3>\n    </CardHeader>\n    <Media className='mx-auto w-100'>\n      <ReactPlayer\n        className='embed-responsive-item mw-100 mh-100 mx-auto'\n        url={video_link}\n        controls\n        config={{\n          youtube: {\n            preload: true,\n            playerVars: { showInfo: 1 },\n          },\n        }}\n      />\n    </Media>\n    <CardFooter className='py-4' />\n  </Card>\n)\n\nexport default memo(LaunchVideo)\n\n/*\n<CardBody className='py-5'>\n  <Media className='mx-auto w-100'>\n    <ReactPlayer\n      className='embed-responsive-item mw-100 mh-100 mx-auto'\n      url={video_link}\n      controls\n      config={{\n        youtube: {\n          preload: true,\n          playerVars: { showInfo: 1 },\n        },\n      }}\n    />\n  </Media>\n</CardBody>\n*/\n","/* eslint-disable no-unused-vars */\nimport React, { memo, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\n// import ReactPlayer from \"react-player\"\nimport classNames from 'classnames'\nimport { Container, Media, Col } from 'reactstrap'\n\nimport LaunchDetails from './LaunchDetails'\nimport RocketDetails from './RocketDetails'\nimport LaunchVideo from './LaunchVideo'\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_date_local\n      launch_success\n      details\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n        cost_per_launch\n        description\n      }\n      links {\n        mission_patch_small\n        presskit\n        article_link\n        wikipedia\n        video_link\n        flickr_images\n      }\n      launch_site {\n        site_id\n        site_name\n        site_name_long\n      }\n    }\n  }\n`\n\nfunction Launch(props) {\n  let { flight_number } = props.match.params\n  flight_number = Number(flight_number)\n\n  const { error, loading, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number },\n  })\n\n  if (loading) return <h4>Loading...</h4>\n  if (error) return console.log(`Error ${error.message}`)\n\n  const {\n    mission_name,\n    launch_year,\n    launch_date_local,\n    launch_success,\n    details,\n    rocket: { rocket_id, rocket_name, rocket_type, cost_per_launch, description },\n    links: {\n      mission_patch_small,\n      presskit,\n      article_link,\n      wikipedia,\n      video_link,\n      flickr_images,\n    },\n    launch_site: { site_id, site_name, site_name_long },\n  } = data.launch\n\n  return (\n    <div>\n      <Container fluid>\n        <Media className='row mt-5'>\n          <Col sm='8' md='8'>\n            <Media heading tag='h2' className='display-4'>\n              <span className='text-dark'>Mission: </span>\n              {mission_name}\n            </Media>\n          </Col>\n          <Col className='text-right'>\n            <Media right>\n              <Media\n                object\n                src={mission_patch_small}\n                alt={`${mission_name} mission patch`}\n                aria-label={`${mission_name} mission patch`}\n                style={{ width: 125 }}\n                className='img-thumbnail rounded'\n              />\n            </Media>\n          </Col>\n        </Media>\n      </Container>\n\n      <LaunchDetails\n        success={launch_success}\n        flight_number={data.launch.flight_number}\n        launch_year={launch_year}\n        details={details}\n        site_name={site_name_long}\n        launch_date_local={launch_date_local}\n      />\n      <LaunchVideo success={launch_success} video_link={video_link} />\n      <RocketDetails\n        success={launch_success}\n        id={rocket_id}\n        name={rocket_name}\n        type={rocket_type}\n        wikipedia={wikipedia}\n        article={article_link}\n        pressKit={presskit}\n        flickr={flickr_images}\n      />\n\n      <hr />\n      <Link\n        to='/'\n        className={classNames(\n          {\n            'btn-success': launch_success,\n            'btn-danger': !launch_success,\n          },\n          'btn',\n          'btn-lg',\n          'mb-3'\n        )}\n      >\n        Back\n      </Link>\n    </div>\n  )\n}\n\nexport default memo(Launch)\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { Container, Media, Col } from 'reactstrap'\nimport classNames from 'classnames'\n\nimport LaunchDetails from './LaunchDetails'\nimport RocketDetails from './RocketDetails'\nimport LaunchVideo from './LaunchVideo'\n\nconst LATEST_LAUNCH_QUERY = gql`\n  query LatestLaunch {\n    latestLaunch {\n      flight_number\n      mission_name\n      launch_year\n      launch_date_local\n      launch_success\n      tentative_max_precision\n      tbd\n      details\n      links {\n        mission_patch_small\n        presskit\n        article_link\n        wikipedia\n        video_link\n        flickr_images\n      }\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n        cost_per_launch\n        description\n      }\n      launch_site {\n        site_id\n        site_name\n        site_name_long\n      }\n    }\n  }\n`\n\nfunction LatestLaunch() {\n  const { error, loading, data } = useQuery(LATEST_LAUNCH_QUERY)\n\n  if (loading) return <h4>Loading...</h4>\n  if (error) return console.log(`Error loading launch: ${error.message}`)\n\n  const {\n    flight_number,\n    mission_name,\n    launch_year,\n    launch_success,\n    details,\n    links: {\n      mission_patch_small,\n      presskit,\n      article_link,\n      wikipedia,\n      video_link,\n      flickr_images,\n    },\n    rocket: { rocket_id, rocket_name, rocket_type, cost_per_launch, description },\n    launch_site: { site_id, site_name, site_name_long },\n  } = data.latestLaunch\n\n  return (\n    <div>\n      <Container fluid>\n        <Media className='row  mt-5'>\n          <Col sm='8' md='8'>\n            <Media heading tag='h2' className='display-4'>\n              <span className='text-dark'>Mission: </span>\n              {mission_name}\n            </Media>\n          </Col>\n          <Col className='text-right'>\n            <Media right>\n              <Media\n                object\n                src={mission_patch_small}\n                alt={`${mission_name} patch`}\n                style={{ width: 125 }}\n                className='img-thumbnail rounded'\n              />\n            </Media>\n          </Col>\n        </Media>\n      </Container>\n\n      <LaunchDetails\n        success={launch_success}\n        flight_number={flight_number}\n        launch_year={launch_year}\n        details={details}\n        site_name={site_name_long}\n      />\n      <LaunchVideo success={launch_success} video_link={video_link} />\n      <RocketDetails\n        success={launch_success}\n        id={rocket_id}\n        name={rocket_name}\n        type={rocket_type}\n        wikipedia={wikipedia}\n        article={article_link}\n        pressKit={presskit}\n        flickr={flickr_images}\n      />\n\n      <hr />\n      <Link\n        to='/'\n        className={classNames(\n          {\n            'btn-success': launch_success,\n            'btn-danger': !launch_success,\n          },\n          'btn',\n          'btn-lg',\n          'mb-3'\n        )}\n      >\n        Back\n      </Link>\n    </div>\n  )\n}\n\nexport default LatestLaunch\n","import React from 'react'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\nimport LatestLaunch from './components/LatestLaunch'\nimport { BackgroundProvider } from './context/background.context'\n\n// import logo from './logo.png'\nimport './bootstrap_cyborg.css'\n// import \"./App.css\"\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n})\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <BackgroundProvider>\n      <Router>\n        <Container fluid='md'>\n          <Route exact path='/launch/latest' component={LatestLaunch} />\n          <Route exact path='/' component={Launches} />\n          <Route exact path='/launch/:flight_number' component={Launch} />\n        </Container>\n      </Router>\n    </BackgroundProvider>\n  </ApolloProvider>\n)\n\nexport default App\n\n/*\nconst App = () => (\n  <ApolloProvider client={client}>\n    <BackgroundProvider>\n      <Router>\n        <Container fluid='md'>\n          <img\n            src={logo}\n            alt='SpaceX'\n            className='img-fluid w-50 w-sm-75 mx-auto d-block mb-3'\n          />\n          <Route exact path='/launch/latest' component={LatestLaunch} />\n          <Route exact path='/' component={Launches} />\n          <Route exact path='/launch/:flight_number' component={Launch} />\n        </Container>\n      </Router>\n    </BackgroundProvider>\n  </ApolloProvider>\n)\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}